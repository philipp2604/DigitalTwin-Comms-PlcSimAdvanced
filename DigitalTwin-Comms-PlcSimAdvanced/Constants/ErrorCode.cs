using Siemens.Simatic.Simulation.Runtime;

namespace DigitalTwin_Comms_PlcSimAdvanced.Constants;

public enum ErrorCodeType
{
    NotAllowed = -70,
    BufferOverflow = -69,
    ConfigFileError = -67,
    UnsupportedPcapDriver = -66,
    PCAPDriverNotRunning = -65,
    InvalidStorage = -62,
    AutodiscoverAlreadyRunning = -61,
    NotAllowedDuringDownload = -60,
    AccessDenied = -59,
    AnotherVariantOfPlcsimRunning = -58,
    StorageTransferError = -57,
    InternalError = -56,
    NotSupportedByModule = -55,
    WrongModuleType = -54,
    WrongModuleState = -53,
    IsEmpty = -52,
    RuntimeNotAvailable = -51,
    VirtualSwitchMisconfigured = -50,
    CommunicationInterfaceNotAvailable = -48,
    NotUpToDate = -47,
    NotEmpty = -46,
    NotRunning = -45,
    NotEnoughMemory = -43,
    CreateDirectoriesFailed = -42,
    DeleteExistingStorageFailed = -41,
    InvalidArchivePath = -40,
    InvalidOperatingState = -39,
    RetrieveStorageFailure = -38,
    ArchiveStorageNotCreated = -37,
    MessageIncomplete = -36,
    StoragePathAlreadyInUse = -35,
    NoStoragePathSet = -34,
    LimitReached = -33,
    WrongCommunicationInterface = -32,
    NoLicenseAvailable = -31,
    LicenseNotFound = -30,
    TypeMismatch = -29,
    InvalidConfiguration = -28,
    ConfiguredDeviceNotFound = -27,
    ConfiguredConnectionNotFound = -26,
    NoSignalConfigurationLoaded = -25,
    SignalConfigurationError = -24,
    SignalTypeMismatch = -23,
    SignalNameDoesNotExist = -22,
    ErrorLoadingDll = -21,
    NotSupported = -19,
    ApiNotInitialized = -17,
    SharedMemoryNotInitialized = -16,
    InterfaceRemoved = -15,
    InstanceNotRunning = -14,
    WrongVersion = -13,
    MessageCorrupt = -12,
    Timeout = -11,
    ConnectionError = -10,
    WrongPipe = -9,
    WrongArgument = -8,
    InvalidMessageId = -7,
    UnknownMessageType = -6,
    AlreadyExists = -5,
    DoesNotExist = -4,
    IndexOutOfRange = -3,
    NotImplemented = -2,
    InvalidErrorCode = -1,
    OK = 0,
    WarningAlreadyExists = 18,
    WarningInvalidCall = 20,
    WarningTrialModeActive = 44,
    WarningNotComplete = 49,
    WarningUnsupportedPcapDriver = 63,
    WarningRunningOnTiaPortalTestSuite = 64,
    WarningPasswordForProtectionError = 68,
    WarningNoExternalCommunication = 71
}

public static ErrorCodeType PlcSimAdvConvertErrorCode(ERuntimeErrorCode errorCode)
{
    return errorCode switch
    {
        ERuntimeErrorCode.OK => ErrorCodeType.OK,
        ERuntimeErrorCode.InvalidErrorCode => ErrorCodeType.InvalidErrorCode,
        ERuntimeErrorCode.NotImplemented => ErrorCodeType.NotImplemented,
        ERuntimeErrorCode.IndexOutOfRange => ErrorCodeType.IndexOutOfRange,
        ERuntimeErrorCode.DoesNotExist => ErrorCodeType.DoesNotExist,
        ERuntimeErrorCode.AlreadyExists => ErrorCodeType.AlreadyExists,
        ERuntimeErrorCode.UnknownMessageType => ErrorCodeType.UnknownMessageType,
        ERuntimeErrorCode.InvalidMessageId => ErrorCodeType.InvalidMessageId,
        ERuntimeErrorCode.WrongArgument => ErrorCodeType.WrongArgument,
        ERuntimeErrorCode.WrongPipe => ErrorCodeType.WrongPipe,
        ERuntimeErrorCode.ConnectionError => ErrorCodeType.ConnectionError,
        ERuntimeErrorCode.Timeout => ErrorCodeType.Timeout,
        ERuntimeErrorCode.MessageCorrupt => ErrorCodeType.MessageCorrupt,
        ERuntimeErrorCode.WrongVersion => ErrorCodeType.WrongVersion,
        ERuntimeErrorCode.InstanceNotRunning => ErrorCodeType.InstanceNotRunning,
        ERuntimeErrorCode.InterfaceRemoved => ErrorCodeType.InterfaceRemoved,
        ERuntimeErrorCode.SharedMemoryNotInitialized => ErrorCodeType.SharedMemoryNotInitialized,
        ERuntimeErrorCode.ApiNotInitialized => ErrorCodeType.ApiNotInitialized,
        ERuntimeErrorCode.WarningAlreadyExists => ErrorCodeType.WarningAlreadyExists,
        ERuntimeErrorCode.NotSupported => ErrorCodeType.NotSupported,
        ERuntimeErrorCode.WarningInvalidCall => ErrorCodeType.WarningInvalidCall,
        ERuntimeErrorCode.ErrorLoadingDll => ErrorCodeType.ErrorLoadingDll,
        ERuntimeErrorCode.SignalNameDoesNotExist => ErrorCodeType.SignalNameDoesNotExist,
        ERuntimeErrorCode.SignalTypeMismatch => ErrorCodeType.SignalTypeMismatch,
        ERuntimeErrorCode.SignalConfigurationError => ErrorCodeType.SignalConfigurationError,
        ERuntimeErrorCode.NoSignalConfigurationLoaded => ErrorCodeType.NoSignalConfigurationLoaded,
        ERuntimeErrorCode.ConfiguredConnectionNotFound => ErrorCodeType.ConfiguredConnectionNotFound,
        ERuntimeErrorCode.ConfiguredDeviceNotFound => ErrorCodeType.ConfiguredDeviceNotFound,
        ERuntimeErrorCode.InvalidConfiguration => ErrorCodeType.InvalidConfiguration,
        ERuntimeErrorCode.TypeMismatch => ErrorCodeType.TypeMismatch,
        ERuntimeErrorCode.LicenseNotFound => ErrorCodeType.LicenseNotFound,
        ERuntimeErrorCode.NoLicenseAvailable => ErrorCodeType.NoLicenseAvailable,
        ERuntimeErrorCode.WrongCommunicationInterface => ErrorCodeType.WrongCommunicationInterface,
        ERuntimeErrorCode.LimitReached => ErrorCodeType.LimitReached,
        ERuntimeErrorCode.NoStoragePathSet => ErrorCodeType.NoStoragePathSet,
        ERuntimeErrorCode.StoragePathAlreadyInUse => ErrorCodeType.StoragePathAlreadyInUse,
        ERuntimeErrorCode.MessageIncomplete => ErrorCodeType.MessageIncomplete,
        ERuntimeErrorCode.ArchiveStorageNotCreated => ErrorCodeType.ArchiveStorageNotCreated,
        ERuntimeErrorCode.RetrieveStorageFailure => ErrorCodeType.RetrieveStorageFailure,
        ERuntimeErrorCode.InvalidOperatingState => ErrorCodeType.InvalidOperatingState,
        ERuntimeErrorCode.InvalidArchivePath => ErrorCodeType.InvalidArchivePath,
        ERuntimeErrorCode.DeleteExistingStorageFailed => ErrorCodeType.DeleteExistingStorageFailed,
        ERuntimeErrorCode.CreateDirectoriesFailed => ErrorCodeType.CreateDirectoriesFailed,
        ERuntimeErrorCode.NotEnoughMemory => ErrorCodeType.NotEnoughMemory,
        ERuntimeErrorCode.WarningTrialModeActive => ErrorCodeType.WarningTrialModeActive,
        ERuntimeErrorCode.NotRunning => ErrorCodeType.NotRunning,
        ERuntimeErrorCode.NotEmpty => ErrorCodeType.NotEmpty,
        ERuntimeErrorCode.NotUpToDate => ErrorCodeType.NotUpToDate,
        ERuntimeErrorCode.CommunicationInterfaceNotAvailable => ErrorCodeType.CommunicationInterfaceNotAvailable,
        ERuntimeErrorCode.WarningNotComplete => ErrorCodeType.WarningNotComplete,
        ERuntimeErrorCode.VirtualSwitchMisconfigured => ErrorCodeType.VirtualSwitchMisconfigured,
        ERuntimeErrorCode.RuntimeNotAvailable => ErrorCodeType.RuntimeNotAvailable,
        ERuntimeErrorCode.IsEmpty => ErrorCodeType.IsEmpty,
        ERuntimeErrorCode.WrongModuleState => ErrorCodeType.WrongModuleState,
        ERuntimeErrorCode.WrongModuleType => ErrorCodeType.WrongModuleType,
        ERuntimeErrorCode.NotSupportedByModule => ErrorCodeType.NotSupportedByModule,
        ERuntimeErrorCode.InternalError => ErrorCodeType.InternalError,
        ERuntimeErrorCode.StorageTransferError => ErrorCodeType.StorageTransferError,
        ERuntimeErrorCode.AnotherVariantOfPlcsimRunning => ErrorCodeType.AnotherVariantOfPlcsimRunning,
        ERuntimeErrorCode.AccessDenied => ErrorCodeType.AccessDenied,
        ERuntimeErrorCode.NotAllowedDuringDownload => ErrorCodeType.NotAllowedDuringDownload,
        ERuntimeErrorCode.AutodiscoverAlreadyRunning => ErrorCodeType.AutodiscoverAlreadyRunning,
        ERuntimeErrorCode.InvalidStorage => ErrorCodeType.InvalidStorage,
        ERuntimeErrorCode.WarningUnsupportedPcapDriver => ErrorCodeType.WarningUnsupportedPcapDriver,
        ERuntimeErrorCode.WarningRunningOnTiaPortalTestSuite => ErrorCodeType.WarningRunningOnTiaPortalTestSuite,
        ERuntimeErrorCode.PCAPDriverNotRunning => ErrorCodeType.PCAPDriverNotRunning,
        ERuntimeErrorCode.UnsupportedPcapDriver => ErrorCodeType.UnsupportedPcapDriver,
        ERuntimeErrorCode.ConfigFileError => ErrorCodeType.ConfigFileError,
        ERuntimeErrorCode.WarningPasswordForProtectionError => ErrorCodeType.WarningPasswordForProtectionError,
        ERuntimeErrorCode.BufferOverflow => ErrorCodeType.BufferOverflow,
        ERuntimeErrorCode.NotAllowed => ErrorCodeType.NotAllowed,
        ERuntimeErrorCode.WarningNoExternalCommunication => ErrorCodeType.WarningNoExternalCommunication,
        _ => ErrorCodeType.InvalidErrorCode,
    };
}